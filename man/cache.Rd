% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cache.R
\name{cache}
\alias{cache}
\alias{rpxCache}
\alias{pxCachedProjects}
\title{Package cache}
\usage{
rpxCache()

pxCachedProjects(cache = rpxCache())
}
\arguments{
\item{cache}{Object of class \code{BiocFileCache}.}
}
\value{
The \code{rpxCache()} function returns an instance of class
\code{BiocFileCache}. \code{pxCachedProjects()} invisbly returns a
\code{tibble} of cached ProteomeXchange projects.
}
\description{
Function to access and manage the cache. \code{rxpCache()} returns the
central \code{rpx} cache. \code{pxCachedrojects()} prints the names of the
cached projects and invisibly returns the cache table.
}
\details{
The cache is an object of class \code{BiocFileCache}, and created with
\code{BiocFileCache::BiocFileCache()}. It can be either the
package-wide cache as defined by \code{rpxCache()} or an instaned
provided by the user.

When projects are cached, they are given a resource name (\code{rname})
composed of the \code{.rpx} prefix followed by the ProteomeXchange
identifier. For example, project \code{PXD000001} is named
\code{.rpxPXD000001} to avoid any conflicts with other resources that
user-created resources.
}
\examples{

## Default rpx cache
rpxCache()

## Set up your own cache with
my_cache <- BiocFileCache::BiocFileCache(tempfile())
my_cache
\dontrun{
px <- PXDataset("PXD000001", cache = my_cache)
pxget(px, "README.txt", cache = my_cache)
}

## List of cached projects
pxCachedProjects()

## To delete project a project from the default cache, first find
## its resource id (rid) in the cache
(cache_tbl <- pxCachedProjects())
(rid <- cache_tbl[cache_tbl$rname == ".rpxPXD000001", "rid"][[1]])
## Then remove it with BiocFileCache:: bfcremove()
\dontrun{
BiocFileCache:::bfcremove(rpxCache(), rid)
}
}
\author{
Laurent Gatto
}
